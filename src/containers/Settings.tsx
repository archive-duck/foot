import {
  IconButton,
  useDisclosure,
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalBody,
  ModalCloseButton,
  Checkbox,
  Text,
  Heading,
  VStack,
  Stack,
  ModalFooter,
  Link,
} from "@chakra-ui/react";
import { useEffect, useState } from "react";
import { IoSettings } from "react-icons/io5";

const Settings: React.FC = () => {
  const [settings, setSettings] = useState<Record<string, string>>();
  const { isOpen, onOpen, onClose } = useDisclosure();

  useEffect(() => {
    chrome.storage?.sync.get(null, (data) => {
      setSettings(data);
    });
  }, [setSettings]);

  const handleChange =
    (field: string) => (e: React.ChangeEvent<HTMLInputElement>) => {
      chrome.storage?.sync.set({ [field]: e.target.checked.toString() });
    };

  return (
    <>
      <IconButton
        icon={<IoSettings />}
        aria-label="settings"
        onClick={onOpen}
        colorScheme="orange"
        variant="ghost"
        size="sm"
      />
      <Modal isOpen={isOpen} onClose={onClose} size="full">
        <ModalOverlay />
        <ModalContent>
          <ModalHeader fontSize="sm">–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</ModalHeader>
          <ModalCloseButton />
          <ModalBody as={Stack} gap={7}>
            <VStack gap={2} alignItems="flex-start">
              <Heading size="xs" textTransform="uppercase">
                Family Search
              </Heading>
              <Checkbox
                colorScheme="orange"
                alignItems="flex-start"
                defaultChecked={settings?.fs_table_sort === "true"}
                onChange={handleChange("fs_table_sort")}
              >
                <Text fontSize="sm" lineHeight={1}>
                  –î–æ–¥–∞—Ç–∏ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –ø–æ—à—É–∫—É
                </Text>
              </Checkbox>
              <Checkbox
                colorScheme="orange"
                alignItems="flex-start"
                defaultChecked={settings?.fs_hide_archive_banner === "true"}
                onChange={handleChange("fs_hide_archive_banner")}
              >
                <Text fontSize="sm" lineHeight={1}>
                  –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –±–∞–Ω–µ—Ä–∏ –ø—Ä–æ –∞—Ä—Ö—ñ–≤–∏
                </Text>
              </Checkbox>
            </VStack>
            <VStack gap={2} alignItems="flex-start">
              <Heading size="xs" textTransform="uppercase">
                reabit.org.ua
              </Heading>
              <Checkbox
                colorScheme="orange"
                alignItems="flex-start"
                defaultChecked={settings?.reabit_table_link === "true"}
                onChange={handleChange("reabit_table_link")}
              >
                <Text fontSize="sm" lineHeight={1}>
                  –ó–∞–º—ñ–Ω–∏—Ç–∏ –∫–ª—ñ–∫ –Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ —Ç–∞–±–ª–∏—Ü—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
                </Text>
              </Checkbox>
            </VStack>
          </ModalBody>
          <ModalFooter flexDirection="column">
            <Text fontSize="xs" color="gray.500">
              –ù–µ –≤–∏—Å—Ç–∞—á–∞—î —è–∫–æ—ó—Å—å —Ñ—É–Ω–∫—Ü—ñ—ó/–Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è?{" "}
              <Link
                href="https://forms.gle/wRtFXzGowJf4oF5s6"
                isExternal
                textDecoration="underline"
              >
                –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É
              </Link>
              , —ñ –ö–∞—á–∫–∞ —Ä–æ–∑–±–µ—Ä–µ—Ç—å—Å—è ü¶Ü.
            </Text>
          </ModalFooter>
        </ModalContent>
      </Modal>
    </>
  );
};

export default Settings;
